<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- SPRING SECURITY SETUP -->
 	
 	<!-- Authentication manager -->
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider
			user-service-ref="userService">
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Disable security -->	
	<security:http security="none" pattern="/app/**"/>
    <security:http security="none" pattern="/node_modules/**"/>
	
	<!-- HTTP settings -->
	<security:http 	realm="Protected API" 
					use-expressions="true"
					auto-config="false"
					disable-url-rewriting="true" 
					create-session="stateless" 
					entry-point-ref="unauthorizedEntryPoint"
					authentication-manager-ref="authenticationManager">
					
		<!-- Custom Filters -->			
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" />
<!-- 	<security:custom-filter ref="csrfHeaderFilter" after="CSRF_FILTER" /> -->

		<!-- Access Rights -->
		<!-- <security:intercept-url pattern="/**" access="permitAll()" /> -->
		<!-- <security:intercept-url pattern="/products" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" /> -->
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll()" />
		<security:intercept-url method="POST" pattern="/property" access="permitAll()" />
		<security:intercept-url method="GET" pattern="/rest/**"	access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		<security:intercept-url method="PUT" pattern="/rest/**"	access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url method="POST" pattern="/rest/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_PLAYER')" />
		<security:intercept-url method="DELETE"	pattern="/rest/**" access="hasRole('ROLE_ADMIN')" />
		
		<!-- CSRF settings -->
		<!-- <security:csrf token-repository-ref="csrfTokenRepository" /> -->			
		 <security:csrf disabled="true"/>
	</security:http>
	
	
	<!-- Security Beans -->
	<bean id="unauthorizedEntryPoint" class="it.kirey.kfuture.security.UnauthorizedEntryPoint" />
	<bean id="authenticationTokenProcessingFilter" class="it.kirey.kfuture.security.AuthenticationTokenProcessingFilter"></bean>
	<bean name="userService" class="it.kirey.kfuture.service.impl.UserServiceImpl"></bean>
	
	<!--<bean id="csrfHeaderFilter" class="it.kirey.kfuture.security.CsrfHeaderFilter"/>
	<bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository">
		<property name="headerName" value="X-XSRF-TOKEN"/>
	</bean> -->

</beans>