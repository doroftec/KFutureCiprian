package it.kirey.kfuture.entity;
// Generated 23-Sep-2016 13:33:51 by Hibernate Tools 5.1.0.Beta1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.LazyCollection;
import org.hibernate.annotations.LazyCollectionOption;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * AmProducts generated by hbm2java
 */
@Entity
@Table(name = "AM_PRODUCTS", uniqueConstraints = @UniqueConstraint(columnNames = "NAME_GENERIC_NAME"))
public class AmProducts implements java.io.Serializable {

	private static final long serialVersionUID = 1734537740194783777L;

	@Id
	@SequenceGenerator(name = "prod_gen", sequenceName = "SEQ_AM_PRODUCTS", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "prod_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	private Integer id;
	
	@JsonIgnore
	@ManyToOne
	@JoinColumn(name = "NAME_GENERIC_NAME", unique = true, nullable = false)
	@LazyCollection(LazyCollectionOption.FALSE)
	private AmDictionary amDictionary;
	
	
	@Column(name = "MIN_AMOUNT", precision = 22, scale = 0)
	private Long minAmount;
	
	@Column(name = "LIFECYCLE", precision = 1, scale = 0)
	private Long lifecycle;

	public AmProducts() {
	}

	public AmProducts(Integer id, AmDictionary amDictionary) {
		this.id = id;
		this.amDictionary = amDictionary;
	}

	public AmProducts(Integer id, AmDictionary amDictionary, Long minAmount, Long lifecycle) {
		this.id = id;
		this.amDictionary = amDictionary;
		this.minAmount = minAmount;
		this.lifecycle = lifecycle;
	}

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public AmDictionary getAmDictionary() {
		return this.amDictionary;
	}

	public void setAmDictionary(AmDictionary amDictionary) {
		this.amDictionary = amDictionary;
	}

	public Long getMinAmount() {
		return this.minAmount;
	}

	public void setMinAmount(Long minAmount) {
		this.minAmount = minAmount;
	}

	
	public Long getLifecycle() {
		return this.lifecycle;
	}

	public void setLifecycle(Long lifecycle) {
		this.lifecycle = lifecycle;
	}
}
