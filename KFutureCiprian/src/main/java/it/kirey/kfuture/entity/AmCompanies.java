package it.kirey.kfuture.entity;
//Generated 22-Sep-2016 15:40:07 by Hibernate Tools 5.1.0.Beta1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * AmCompanies generated by hbm2java
 */
@Entity
@Table(name = "AM_COMPANIES", uniqueConstraints = @UniqueConstraint(columnNames = "CODE"))
public class AmCompanies implements java.io.Serializable {

	private static final long serialVersionUID = 6836426414382185488L;

	private Integer id;
	private AmUserAccounts amUserAccountsByUtInsert;
	private AmUserAccounts amUserAccountsByUtUpdate;
	private String code;
	private String description;
	private Date tsInsert;
	private Date tsUpdate;
	private List<AmUserAccounts> amUserAccountses = new ArrayList<AmUserAccounts>(0);

	public AmCompanies() {
	}

	public AmCompanies(Integer id, AmUserAccounts amUserAccountsByUtInsert, AmUserAccounts amUserAccountsByUtUpdate,
			String code, Date tsInsert, Date tsUpdate) {
		this.id = id;
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
		this.code = code;
		this.tsInsert = tsInsert;
		this.tsUpdate = tsUpdate;
	}

	public AmCompanies(Integer id, AmUserAccounts amUserAccountsByUtInsert, AmUserAccounts amUserAccountsByUtUpdate,
			String code, String description, Date tsInsert, Date tsUpdate, List<AmUserAccounts> amUserAccountses) {
		this.id = id;
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
		this.code = code;
		this.description = description;
		this.tsInsert = tsInsert;
		this.tsUpdate = tsUpdate;
		this.amUserAccountses = amUserAccountses;
	}

	@Id
	@SequenceGenerator(name = "idCompany_gen", sequenceName = "SEQ_AM_COMPANIES", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "idCompany_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UT_INSERT", nullable = false)
	public AmUserAccounts getAmUserAccountsByUtInsert() {
		return this.amUserAccountsByUtInsert;
	}

	public void setAmUserAccountsByUtInsert(AmUserAccounts amUserAccountsByUtInsert) {
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UT_UPDATE", nullable = false)
	public AmUserAccounts getAmUserAccountsByUtUpdate() {
		return this.amUserAccountsByUtUpdate;
	}

	public void setAmUserAccountsByUtUpdate(AmUserAccounts amUserAccountsByUtUpdate) {
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
	}

	@Column(name = "CODE", unique = true, nullable = false, length = 50)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "TS_INSERT", nullable = false)
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AM_USER_COMPANIES", joinColumns = {
			@JoinColumn(name = "AM_COMPANY", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "AM_USER_ACCOUNT", nullable = false, updatable = false) })
	public List<AmUserAccounts> getAmUserAccountses() {
		return this.amUserAccountses;
	}

	public void setAmUserAccountses(List<AmUserAccounts> amUserAccountses) {
		this.amUserAccountses = amUserAccountses;
	}
}
