package it.kirey.kfuture.entity;
// Generated Sep 22, 2016 3:50:04 PM by Hibernate Tools 4.3.5.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.springframework.security.core.GrantedAuthority;

import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;



/**
 * AmApplicationRoles generated by hbm2java
 */
@Entity
@Table(name = "AM_APPLICATION_ROLES", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class AmApplicationRoles implements java.io.Serializable, GrantedAuthority {

	private static final long serialVersionUID = 1L;

	private Integer id;
	@JsonIgnore
	private AmUserAccounts amUserAccountsByUtUpdate;
	@JsonIgnore
	private AmUserAccounts amUserAccountsByUtInsert;
	private String name;
	private Long timeout;
	private Date tsInsert;
	private Date tsUpdate;
	@JsonBackReference
	private List<AmUserAccounts> amUserAccountses = new ArrayList<AmUserAccounts>(0);
	@JsonBackReference
	private List<AmUrlRoutes> amUrlRouteses = new ArrayList<AmUrlRoutes>(0);


	public AmApplicationRoles() {
	}

	public AmApplicationRoles(Integer id, AmUserAccounts amUserAccountsByUtUpdate,
			AmUserAccounts amUserAccountsByUtInsert, String name, Date tsInsert, Date tsUpdate) {
		this.id = id;
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
		this.name = name;
		this.tsInsert = tsInsert;
		this.tsUpdate = tsUpdate;
	}

	public AmApplicationRoles(Integer id, AmUserAccounts amUserAccountsByUtUpdate,
			AmUserAccounts amUserAccountsByUtInsert, String name, Long timeout, Date tsInsert, Date tsUpdate,
			List<AmUserAccounts> amUserAccountses, List<AmUrlRoutes> amUrlRouteses) {
		this.id = id;
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
		this.name = name;
		this.timeout = timeout;
		this.tsInsert = tsInsert;
		this.tsUpdate = tsUpdate;
		this.amUserAccountses = amUserAccountses;
		this.amUrlRouteses = amUrlRouteses;
	}

	@Id
	@SequenceGenerator(name = "role_gen", sequenceName = "SEQ_AM_APPLICATION_ROLES", allocationSize = 1, initialValue = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "role_gen")
	@Column(name = "ID", unique = true, nullable = false, precision = 10, scale = 0)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UT_UPDATE", nullable = false)
	public AmUserAccounts getAmUserAccountsByUtUpdate() {
		return this.amUserAccountsByUtUpdate;
	}

	public void setAmUserAccountsByUtUpdate(AmUserAccounts amUserAccountsByUtUpdate) {
		this.amUserAccountsByUtUpdate = amUserAccountsByUtUpdate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "UT_INSERT", nullable = false)
	public AmUserAccounts getAmUserAccountsByUtInsert() {
		return this.amUserAccountsByUtInsert;
	}

	public void setAmUserAccountsByUtInsert(AmUserAccounts amUserAccountsByUtInsert) {
		this.amUserAccountsByUtInsert = amUserAccountsByUtInsert;
	}

	@Column(name = "NAME", unique = true, nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "TIMEOUT", scale = 0)
	public Long getTimeout() {
		return this.timeout;
	}

	public void setTimeout(Long timeout) {
		this.timeout = timeout;
	}

	@Column(name = "TS_INSERT", nullable = false)
	public Date getTsInsert() {
		return this.tsInsert;
	}

	public void setTsInsert(Date tsInsert) {
		this.tsInsert = tsInsert;
	}

	@Column(name = "TS_UPDATE", nullable = false)
	public Date getTsUpdate() {
		return this.tsUpdate;
	}

	public void setTsUpdate(Date tsUpdate) {
		this.tsUpdate = tsUpdate;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "AM_USER_ROLES", joinColumns = {
			@JoinColumn(name = "AM_APPLICATION_ROLE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "AM_USER_ACCOUNT", nullable = false, updatable = false) })
	public List<AmUserAccounts> getAmUserAccountses() {
		return this.amUserAccountses;
	}

	public void setAmUserAccountses(List<AmUserAccounts> amUserAccountses) {
		this.amUserAccountses = amUserAccountses;
	}

	@Override
	@Transient
	public String getAuthority() {
		return this.name;
	}
	
	@ManyToMany(fetch = FetchType.EAGER)
	@JoinTable(name = "AM_ROLE_ROUTES", joinColumns = {
			@JoinColumn(name = "AM_APPLICATION_ROLE", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "AM_ROUTE", nullable = false, updatable = false) })
	public List<AmUrlRoutes> getAmUrlRouteses() {
		return this.amUrlRouteses;
	}

	public void setAmUrlRouteses(List<AmUrlRoutes> amUrlRouteses) {
		this.amUrlRouteses = amUrlRouteses;
	}

}